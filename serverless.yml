org: krystiannn
app: serverless-newsletter-list
service: serverless-newsletter-list
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  region: eu-central-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
        - s3:*
        - ses:*
      Resource: '*'

functions:
  addEmailAddress:
    handler: lambdas/emailAddress/add.handler
    events:
      - http:
          path: /email-address/add
          method: post
          private: true
  fetchAllEmailAddresses:
    handler: lambdas/emailAddress/fetchAll.handler
    events:
      - http:
          path: /email-address/fetch-all
          method: get
          private: true
  deleteEmailAddress:
    handler: lambdas/emailAddress/delete.handler
    events:
      - http:
          path: /email-address/delete/{email}
          method: delete
          private: true
  sendEmail:
    handler: lambdas/sendEmail.handler
    events:
      - http:
          path: /send-email
          method: post
          private: true
  sendWeeklyOffersEmail:
    handler: lambdas/scheduleTasks/weeklyOffersEmail.handler
    events:
      - schedule: cron(0 9 ? * 7 *)
  # uploadImage:
  #   handler: src/uploadImage.handler
  #   events:
  #     - httpApi:
  #         path: /upload-image
  #         method: post

plugins:
  - serverless-add-api-key

custom:
  apiKeys:
    - name: AdminApiKey

resources:
  Resources:
    EmailsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: EmailsTable
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    PhotosBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: serverless-newsletter-list-photos-s3-bucket
